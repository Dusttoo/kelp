{"version":3,"sources":["store/csrf.js","store/session.js","components/SignupFormPage/index.js","components/Navigation/ProfileButton.js","context/Modal.js","components/LoginFormModal/LoginForm.js","components/LoginFormModal/index.js","components/Navigation/index.js","App.js","store/index.js","index.js"],"names":["csrfFetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","fetch","res","status","SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","sessionReducer","newState","state","action","Object","assign","SignupFormPage","dispatch","useDispatch","sessionUser","useSelector","session","useState","email","setEmail","firstName","setFirstName","lastName","setLastName","profileImg","setProfileImg","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","to","className","onSubmit","e","preventDefault","body","JSON","stringify","response","json","data","catch","map","error","idx","value","onChange","target","required","src","alt","ProfileButton","showMenu","setShowMenu","useEffect","closeMenu","document","addEventListener","removeEventListener","onClick","ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","setValue","current","Provider","ref","Modal","onClose","modalNode","useContext","ReactDOM","createPortal","id","LoginForm","LoginFormModal","showModal","setShowModal","Navigation","sessionLinks","isLoaded","exact","App","enhancer","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a56d9735.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\n\nexport async function csrfFetch(url, options = {}) {\n  options.method = options.method || 'GET';\n  options.headers = options.headers || {};\n\n  if (options.method.toUpperCase() !== 'GET') {\n    options.headers['Content-Type'] =\n      options.headers['Content-Type'] || 'application/json';\n    options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n  }\n  const res = await window.fetch(url, options);\n\n\n  if (res.status >= 400) throw res;\n\n\n  return res;\n}\n\nexport function restoreCSRF() {\n  return csrfFetch('/api/csrf/restore');\n}","import { csrfFetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\nexport const login = (user) => async (dispatch) => {\n  const { email, password } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const { email, firstName, lastName, profileImg, password } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      firstName,\n      email,\n      password,\n      lastName,\n      profileImg,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE',\n  });\n  dispatch(removeUser());\n  return response;\n};\n\n\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport './SignupFormPage.css'\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [profileImg, setProfileImg] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(sessionActions.signup({ email, firstName, lastName, profileImg, password }))\n        .catch(async (res) => {\n          const data = await res.json();\n          if (data && data.errors) setErrors(data.errors);\n        });\n    }\n    return setErrors(['Confirm Password field must be the same as the Password field']);\n  };\n\n  return (\n    <>\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit} className=\"signupForm\">\n                  <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                  </ul>\n                  <h1 className=\"login-header\">Sign up for Kelp</h1>\n                  <div className=\"signupContainer\">\n                  <h3 className=\"signup-header\">Already a user?</h3> \n                  <Link to=\"/login\" className=\"signup-link\">log in</Link>\n                  </div>   \n                  <div className=\"name-fields\">              \n                    <label className=\"signup-label firstName\">\n                      First Name\n                      <input\n                        className=\"signup-input\"\n                        type=\"text\"\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                        required\n                      />\n                    </label>\n                    <label className=\"signup-label lastName\">\n                      Last Name\n                      <input\n                        className=\"signup-input\"\n                        type=\"text\"\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                        required\n                      />\n                    </label>\n                  </div>\n                  <label className=\"signup-label\">\n                    Email\n                    <input \n                      className=\"signup-input\"\n                      type=\"text\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                  </label>\n                  <label className=\"signup-label\">\n                    Profile Image\n                    <input\n                      className=\"signup-input\"\n                      type=\"text\"\n                      value={profileImg}\n                      onChange={(e) => setProfileImg(e.target.value)}\n                      required\n                    />\n                  </label>\n                  <label className=\"signup-label\">\n                    Password\n                    <input\n                      className=\"signup-input\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                  </label>\n                  <label className=\"signup-label\">\n                    Confirm Password\n                    <input\n                      className=\"signup-input\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      required\n                    />\n                  </label>\n                  <div className=\"buttons\">\n                    <button className=\"signup-button\" type=\"submit\">Sign Up</button>\n                    <button className=\"demo-button\" type=\"submit\">Demo</button>\n                  </div>\n                </form>\n                <img className=\"signupImage\" src=\"https://i.imgur.com/qI2NnYR.png\" alt=\"placeholder\"></img>\n            </div>\n    </>                \n  );\n}\n\nexport default SignupFormPage;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport * as sessionActions from '../../store/session';\nimport './Navigation.css'\n\n//need to do fetch requet to get first ad last name\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  \n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n  \n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener('click', closeMenu);\n  \n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <div className=\"account-menu\">\n        <button onClick={openMenu}>\n          <i className=\"fas fa-solid fa-user account-icon\" />\n        </button>\n        {showMenu && (\n          <ul className=\"profile-dropdown\">\n            <li>{`Hello, ${user.firstName} ${user.lastName}`}</li>\n            <li>{user.email}</li>\n              <button onClick={logout} className=\"logOut\">Log Out</button>\n          </ul>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ProfileButton;","import React, { useContext, useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    setValue(modalRef.current);\n  }, [])\n\n  return (\n    <>\n      <ModalContext.Provider value={value}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal({ onClose, children }) {\n  const modalNode = useContext(ModalContext);\n  if (!modalNode) return null;\n\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={onClose} />\n      <div id=\"modal-content\">\n        {children}\n      </div>\n    </div>,\n    modalNode\n  );\n}","import React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './LoginForm.css';\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ email, password })).catch(\n      async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      }\n    );\n  };\n\n  return (\n    <>\n        {/* <div className=\"headerStrip\"><img className=\"logo\" src=\"https://i.imgur.com/DbdVpyZ.png\" alt=\"kelp logo\"></img></div> */}\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit} className=\"loginForm\">\n                  <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                  </ul>\n                  <h1 className=\"login-header\">Log in to Kelp</h1>\n                  <div className=\"signupContainer\">\n                  <h3 className=\"signup-header\">New to Kelp?</h3> \n                  <Link to=\"/signup\" className=\"signup-link\">sign up</Link>\n                  </div>\n                  <div className=\"form-items\">\n                    <label className=\"login-label\">\n                      Email\n                      <input\n                        className=\"login-input\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                      />\n                    </label>\n                    <label className=\"login-label\">\n                      Password\n                      <input\n                        className=\"login-input\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                      />\n                    </label>\n                  </div>\n                  <div className=\"buttons\">\n                    <button className=\"login-button\" type=\"submit\">Log In</button>\n                    <button className=\"demo-button\" type=\"submit\">Demo</button>\n                  </div>\n                </form>\n                <img className=\"loginImage\" src=\"https://i.imgur.com/qI2NnYR.png\" alt=\"placeholder\"></img>\n            </div>\n    </>\n  );\n}\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Modal } from '../../context/Modal';\nimport LoginForm from './LoginForm';\n\nfunction LoginFormModal() {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <button onClick={() => setShowModal(true)}>Log In</button>\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <LoginForm /> \n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default LoginFormModal;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport LoginFormModal from '../LoginFormModal';\nimport './Navigation.css';\n\nfunction Navigation({ isLoaded }){\n  const sessionUser = useSelector(state => state.session.user);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <ProfileButton user={sessionUser} />\n    );\n  } else {\n    sessionLinks = (\n      <>\n        <div className=\"login-buttons\">\n            <LoginFormModal/>\n            {/* <Link to=\"/login\" className=\"login\">Log In</Link> */}\n            <Link to=\"/signup\" className=\"signup\">Sign Up</Link>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"home\">\n        <Link exact to=\"/\"> <img className=\"logo\" src=\"https://i.imgur.com/DbdVpyZ.png\" alt=\"kelp logo\"></img></Link>\n      </div>\n        {isLoaded && sessionLinks}\n    </div>\n  );\n}\n\nexport default Navigation;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport sessionReducer from './session';\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { ModalProvider } from \"./context/Modal\";\n\nimport configureStore from \"./store\";\nimport { restoreCSRF, csrfFetch } from \"./store/csrf\";\nimport * as sessionActions from \"./store/session\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <ModalProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ModalProvider>\n    </Provider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}