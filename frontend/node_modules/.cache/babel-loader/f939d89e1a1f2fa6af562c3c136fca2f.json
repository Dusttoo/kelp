{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport businessReducer from './businesses';\nimport sessionReducer from './session';\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  business: businessReducer\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n  window.businessActions;\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/dusty/kelp/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","businessReducer","sessionReducer","rootReducer","session","business","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","businessActions","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AAEA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,OAAO,EAAEF,cADuB;AAEhCG,EAAAA,QAAQ,EAAEJ;AAFsB,CAAD,CAAnC;AAKA,IAAIK,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGR,eAAe,CAACE,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMU,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+ChB,OADjD;AAEAO,EAAAA,QAAQ,GAAGO,gBAAgB,CAACf,eAAe,CAACE,KAAD,EAAQU,MAAR,CAAhB,CAA3B;AACAI,EAAAA,MAAM,CAACE,eAAP;AACD;;AAED,MAAMC,cAAc,GAAIC,cAAD,IAAoB;AACzC,SAAOtB,WAAW,CAACO,WAAD,EAAce,cAAd,EAA8BZ,QAA9B,CAAlB;AACD,CAFD;;AAIA,eAAeW,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport businessReducer from './businesses';\nimport sessionReducer from './session';\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    business: businessReducer\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n  window.businessActions\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}