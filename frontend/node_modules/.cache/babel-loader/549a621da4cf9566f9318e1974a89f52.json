{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport businessReducer from './businesses';\nimport sessionReducer from './session';\nimport oneBusinessReducer from './businessPage';\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  business: businessReducer,\n  photo: businessReducer,\n  oneBusiness: oneBusinessReducer // onePhoto: oneBusinessReducer,\n\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/dusty/kelp/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","businessReducer","sessionReducer","oneBusinessReducer","rootReducer","session","business","photo","oneBusiness","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCQ,EAAAA,OAAO,EAAEH,cADuB;AAEhCI,EAAAA,QAAQ,EAAEL,eAFsB;AAGhCM,EAAAA,KAAK,EAAEN,eAHyB;AAIhCO,EAAAA,WAAW,EAAEL,kBAJmB,CAKhC;;AALgC,CAAD,CAAnC;AAQA,IAAIM,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGX,eAAe,CAACE,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMa,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CnB,OADjD;AAEAU,EAAAA,QAAQ,GAAGO,gBAAgB,CAAClB,eAAe,CAACE,KAAD,EAAQa,MAAR,CAAhB,CAA3B;AAED;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACzC,SAAOxB,WAAW,CAACQ,WAAD,EAAcgB,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFD;;AAIA,eAAeU,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport businessReducer from './businesses';\nimport sessionReducer from './session';\nimport oneBusinessReducer from './businessPage';\n\nconst rootReducer = combineReducers({\n    session: sessionReducer,\n    business: businessReducer,\n    photo: businessReducer,\n    oneBusiness: oneBusinessReducer,\n    // onePhoto: oneBusinessReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;"]},"metadata":{},"sourceType":"module"}