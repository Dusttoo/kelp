{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/kelp/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      email,\n      password\n    })).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: error\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 49\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-header\",\n          children: \"Log in to Kelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signupContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"signup-header\",\n            children: \"New to Kelp?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"signup-link\",\n            children: \"sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"demo-button\",\n            type: \"submit\",\n            children: \"Demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loginImage\",\n        src: \"https://i.imgur.com/qI2NnYR.png\",\n        alt: \"placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginForm, \"gop3dpAblinrLAYpTQ3v3S1rKm4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/dusty/kelp/authenticate-me/frontend/src/components/LoginFormModal/LoginForm.js"],"names":["React","useState","sessionActions","useDispatch","useSelector","Redirect","Link","LoginForm","dispatch","sessionUser","state","session","user","email","setEmail","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","json","map","error","idx","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport './LoginForm.css';\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ email, password }))\n      .catch(async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n  }\n\n  return (\n    <>\n        {/* <div className=\"headerStrip\"><img className=\"logo\" src=\"https://i.imgur.com/DbdVpyZ.png\" alt=\"kelp logo\"></img></div> */}\n            <div className=\"form-container\">\n                <form onSubmit={handleSubmit} className=\"loginForm\">\n                  <ul>\n                    {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n                  </ul>\n                  <h1 className=\"login-header\">Log in to Kelp</h1>\n                  <div className=\"signupContainer\">\n                  <h3 className=\"signup-header\">New to Kelp?</h3> \n                  <Link to=\"/signup\" className=\"signup-link\">sign up</Link>\n                  </div>\n                  <label className=\"login-label\">\n                    Email\n                    <input\n                      className=\"login-input\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                  </label>\n                  <label className=\"login-label\">\n                    Password\n                    <input\n                      className=\"login-input\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                    />\n                  </label>\n                  <div className=\"buttons\">\n                    <button className=\"login-button\" type=\"submit\">Log In</button>\n                    <button className=\"demo-button\" type=\"submit\">Demo</button>\n                  </div>\n                </form>\n                <img className=\"loginImage\" src=\"https://i.imgur.com/qI2NnYR.png\" alt=\"placeholder\"></img>\n            </div>\n    </>\n  );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}