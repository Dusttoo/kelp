{"ast":null,"code":"import Cookies from 'js-cookie';\nexport async function csrfFetch(url, options = {}) {\n  options.method = options.method || 'GET';\n  options.headers = options.headers || {};\n\n  if (options.method.toUpperCase() !== 'GET') {\n    options.headers['Content-Type'] = options.headers['Content-Type'] || 'application/json';\n    options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n  }\n\n  const res = await window.fetch(url, options);\n  if (res.status >= 400) throw res;\n  return res;\n}\nexport function restoreCSRF() {\n  return csrfFetch('/api/csrf/restore');\n}","map":{"version":3,"sources":["/Users/dusty/kelp/frontend/src/store/csrf.js"],"names":["Cookies","csrfFetch","url","options","method","headers","toUpperCase","get","res","window","fetch","status","restoreCSRF"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,OAAO,GAAG,EAAxC,EAA4C;AACjDA,EAAAA,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACC,MAAR,IAAkB,KAAnC;AACAD,EAAAA,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACE,OAAR,IAAmB,EAArC;;AAEA,MAAIF,OAAO,CAACC,MAAR,CAAeE,WAAf,OAAiC,KAArC,EAA4C;AAC1CH,IAAAA,OAAO,CAACE,OAAR,CAAgB,cAAhB,IACEF,OAAO,CAACE,OAAR,CAAgB,cAAhB,KAAmC,kBADrC;AAEAF,IAAAA,OAAO,CAACE,OAAR,CAAgB,YAAhB,IAAgCL,OAAO,CAACO,GAAR,CAAY,YAAZ,CAAhC;AACD;;AACD,QAAMC,GAAG,GAAG,MAAMC,MAAM,CAACC,KAAP,CAAaR,GAAb,EAAkBC,OAAlB,CAAlB;AAGA,MAAIK,GAAG,CAACG,MAAJ,IAAc,GAAlB,EAAuB,MAAMH,GAAN;AAGvB,SAAOA,GAAP;AACD;AAED,OAAO,SAASI,WAAT,GAAuB;AAC5B,SAAOX,SAAS,CAAC,mBAAD,CAAhB;AACD","sourcesContent":["import Cookies from 'js-cookie';\n\nexport async function csrfFetch(url, options = {}) {\n  options.method = options.method || 'GET';\n  options.headers = options.headers || {};\n\n  if (options.method.toUpperCase() !== 'GET') {\n    options.headers['Content-Type'] =\n      options.headers['Content-Type'] || 'application/json';\n    options.headers['XSRF-Token'] = Cookies.get('XSRF-TOKEN');\n  }\n  const res = await window.fetch(url, options);\n\n\n  if (res.status >= 400) throw res;\n\n\n  return res;\n}\n\nexport function restoreCSRF() {\n  return csrfFetch('/api/csrf/restore');\n}"]},"metadata":{},"sourceType":"module"}